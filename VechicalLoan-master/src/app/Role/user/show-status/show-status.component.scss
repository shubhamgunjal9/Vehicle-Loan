
mat-card {
    max-width: 900px;
 
    margin: 2em auto;
    text-align: center;
  }
  mat-form-field {
    display: block;
    }
 .example-full-width{
    width: 100%;
  
 }
 .mat-form-field {
  width: 200px;
  font-size: 12px; // example
}
.button-close {
  justify-self: right;
  font-size: 15px;
  border: none;
  height: 40px;
  // background-color: #FFFFFF;
  outline: none;
  color: #ffffff;
  margin-top: 10px;
  &:hover {
      cursor: pointer;
  }
}
.button-save{
  justify-self: right;
  font-size: 15px;
  border: none;
  height: 40px;
  // background-color: #FFFFFF;
  outline: none;
  color: #ffffff;
}
.Verified{
  color: #e6930e;
}
.Applied{
  color: #e8f831;
}
.Rejected{
  color: #fa1606;
}
.sanctioned{
  color: #0eeb30;
}

h3{
  font-size: 20px;
}

body { padding: 30px; }

@mixin can-toggle-branding(
  $can-toggle-off-color: #ea0030, 
  $can-toggle-on-color: #5fc054,
  $can-toggle-inactive-text: rgba(white, 0.5),
  $can-toggle-transition: cubic-bezier(0,1,0.5,1)
) {
  
  input[type="checkbox"] {
    
    &[disabled] ~ label {
      color: rgba($can-toggle-off-color, 0.5);
    }
    
    &:focus ~ label, &:hover ~ label {
      .can-toggle__switch {
        background-color: $can-toggle-off-color;
        &:after { color: darken($can-toggle-off-color, 10%); }
      }
    }
    &:hover ~label { color: darken($can-toggle-off-color, 5%); }
    &:checked {
      ~ label {
        &:hover { color: darken($can-toggle-on-color, 3%); }
        
        .can-toggle__switch {
          background-color: lighten($can-toggle-on-color, 5%);
          &:after { color: darken($can-toggle-on-color, 5%); }
        }
      }
      
      &:focus, &:hover {
        ~ label {
          .can-toggle__switch {
            background-color: $can-toggle-on-color;
            &:after { color: darken($can-toggle-on-color, 10%); }
          }
        } 
      }
    }
  }
  
  label {
    
    .can-toggle__label-text { flex: 1; }
    
    .can-toggle__switch {
      transition: background-color 0.3s $can-toggle-transition;
      background: lighten($can-toggle-off-color, 5%);
      &:before { color: $can-toggle-inactive-text; }
      &:after {
        // Autoprefixer choked here, so making the prefixes explicit
        -webkit-transition: -webkit-transform 0.3s $can-toggle-transition;
        transition: transform 0.3s $can-toggle-transition;
        color: $can-toggle-off-color; 
      }
    }
    
  }
}

@mixin can-toggle-appearance 
( 
  $can-toggle-width: 134px,
  $can-toggle-height: 36px,
  $can-toggle-border-radius: 4px,
  $can-toggle-offset: 2px,
  $can-toggle-label-font-size: 14px,
  $can-toggle-switch-font-size: 12px,
  $can-toggle-shadow: 0 3px 3px rgba(black, 0.4)
){
  $can-toggle-switch-width: $can-toggle-width/2;
  
  input[type="checkbox"] {

    &:focus ~ label, &:hover ~ label {
      .can-toggle__switch {
        &:after { box-shadow: $can-toggle-shadow; } 
      }
    }
    
    &:checked {
      ~ label {
        .can-toggle__switch {
          &:after { transform: translate3d($can-toggle-width - ($can-toggle-switch-width + $can-toggle-offset),0,0); }  
        }
      }
      &:focus, &:hover {
        ~ label {
          .can-toggle__switch { &:after { box-shadow: $can-toggle-shadow; } }
        } 
      }
    }
  }


  
  label {
    font-size: $can-toggle-label-font-size;
    
    .can-toggle__switch {
      height: $can-toggle-height;
      flex: 0 0 $can-toggle-width;
      border-radius: $can-toggle-border-radius;
      
      &:before {
        left: $can-toggle-width/2;
        font-size: $can-toggle-switch-font-size; 
        line-height: $can-toggle-height;
        width: $can-toggle-width/2;
        padding: 0 12px;
      }
      
      &:after {
        top: $can-toggle-offset; left: $can-toggle-offset;
        border-radius: $can-toggle-border-radius/2;
        width: $can-toggle-switch-width - $can-toggle-offset; 
        line-height: $can-toggle-height - ($can-toggle-offset*2);
        font-size: $can-toggle-switch-font-size;
      }
      
      &:hover {
        &:after { box-shadow: $can-toggle-shadow; }
      }
    } 
  }
}



.can-toggle {
  position: relative;
  *, *:before, *:after { box-sizing: border-box; }
  //overflow: hidden;
  
  input[type="checkbox"] {
    opacity: 0;
    position: absolute;
    top: 0; left: 0;
    
    &[disabled] ~ label {
      pointer-events: none;
      .can-toggle__switch { opacity: 0.4; }
    }
    
    &:checked {
      ~ label {
        
        .can-toggle__switch {
          
          &:before {
            content: attr(data-unchecked);
            left: 0;
          }
        
          &:after {
            content: attr(data-checked);
          }  
        }
      }
      
      // &:focus, &:hover {
      //   // ~ label {

      //   // } 
      // }
    }
  }
  
  label {
    user-select: none;
    position: relative;
    display: flex;
    align-items: center;
    
    .can-toggle__label-text { 
      flex: 1;
      padding-left: 32px;
    }
    
    .can-toggle__switch {
      position: relative;
      
      &:before {
        content: attr(data-checked);
        position: absolute;
        top: 0;
        text-transform: uppercase;
        text-align: center;
      }
      
      &:after {
        content: attr(data-unchecked);
        position: absolute;
        z-index: 5;
        text-transform: uppercase;
        text-align: center;
        background: white;
        transform: translate3d(0,0,0);
      }

    }
    
  }
  
  // Default values for .can-toggle class
  @include can-toggle-branding; 
  @include can-toggle-appearance; 
  
  // Create toggles of different sizes by overriding the can-toggle-appearance mixin defaults
  &.can-toggle--size-small {
    @include can-toggle-appearance
    (
      90px, // Toggle width
      28px,  // Toggle height
      2px,   // Toggle border radius
      1px,   // Offset (distance btw switch and box)
      13px,  // Label font size
      10px,  // Switch font size
      0 2px 2px rgba(black, 0.4) // Switch shadow on hover/focus
    ); 
  }
}
// this for the container
.card {
  box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);
  transition: 0.3s;
  width: 100%;
}

.card:hover {
  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2);
}

.container {
  padding: 2px 16px;
  width: 100%;
}
.button-close{
  justify-self: right;
  font-size: 15px;
  border: none;
  height: 40px;
  // background-color: #FFFFFF;
  outline: none;
  color: #ffffff;
  margin-top: 10px;
  &:hover {
      cursor: pointer;
  }
}
.box{
  max-width: 500px;
 
  margin: 2em auto;
  text-align: center;
}
.form-group{
margin-left: 10px;
margin-right: 10px;
padding: 30px;
width: 45%;
}
.row{
  padding-bottom: 15px;
}
.can-toggle__switch{
padding: 7px 8px;
}
.button{
  justify-self: right;
  font-size: 18px;
  border: none;
  background-color: #69c8f3c7;
  height: 40px;
  margin: 30px;
  // background-color: #FFFFFF;
  outline: none;
  width: 70%;
  margin-top: 15%;
  color: #0c0b0b;
  border-radius: 20px;

  &:hover {
      background-color: #080079;
      cursor: pointer;
      color: #ffffff;
  };
}
.full-width{
  // padding-top: 10px;
  margin-top: 10%;
  
}
.buttonclass2 {
  justify-self: right;
  font-size: 18px;
  border: none;
  background-color: #69c8f3c7;
  height: 40px;
  // margin: 30px;
  // background-color: #FFFFFF;
  outline: none;
  width: 40%;
  color: #0c0b0b;
  border-radius: 20px;
  // margin-top: 10px;
  &:hover {
      background-color: #080079;
      cursor: pointer;
      color: #ffffff;
  };
}